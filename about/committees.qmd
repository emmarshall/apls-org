---
title: "Committees & Task Forces"
description: | 
  List of current committees and task forces for the American Psychology-Law Society.
title-block-banner: "../images/default-banner.svg"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


### The Society operates through a number of standing committees that work to carry out its mission and to accomplish particular tasks.

::: {.callout-note appearance="simple"}
## Executive Committee

Occasionally, the President, in consultation with the Executive Committee, will also establish ad hoc committees and task forces. 

[Learn more about President and Executive Committee](leadership.html)
:::

```{r table, echo=FALSE, warning=FALSE, message=FALSE}
#| label: Create committee table
library(reactable)
library(htmltools)
library(readxl)
library(dplyr)
library(stringr)

cmts <- read_excel("committees.xlsx")

# Read in committee bylaw information with explicit encoding and clean special characters
#cmts <- read.csv("committees.csv", stringsAsFactors = FALSE, fileEncoding = "UTF-8") |>
#  mutate(across(where(is.character), function(x) {
 #   x |>
      # Replace problematic characters
#      str_replace_all("\u2018|\u2019", "'") |>  # Smart single quotes
#      str_replace_all("\u201C|\u201D", '"') |>  # Smart double quotes
#      str_replace_all("\u2013|\u2014", "-") |>  # En and em dashes
 #     str_replace_all("\u00A0", " ") |>         # Non-breaking spaces
 #     str_replace_all("\u200B", "") |>          # Zero-width spaces
 #     str_replace_all("‚Äô", "'") |>            # Specific problematic sequence
 #     str_replace_all("‚Äú", '"') |>            # Specific problematic sequence
  #    str_replace_all("‚Äù", '"')                # Specific problematic sequence
 # }))
# Read in committee bylaw information
#cmts <- read.csv("committees.csv", stringsAsFactors = FALSE)
# Get sheet names from current leadership listing
sheet_names <- excel_sheets("Leadership_2025-26.xlsx")

# Read in the Excel file and store it as a list of data frames with sheet names as column
excel_data <- lapply(sheet_names, function(sheet_name) {
  read_excel("Leadership_2025-26.xlsx", sheet = sheet_name) |> 
    mutate(sheet_name = sheet_name)
})
# Combine the data frames into a single data frame
combined_data <- bind_rows(excel_data)
members <- combined_data |>
  rename(key = sheet_name) |> 
  select(`key`, `Position`, `Name`, `Term`,`Additional`)

row_details <- function(index) {
  cmt <- cmts[index, ]

  cmt_field <- function(name, ...) {
    if (any(is.na(...))) NULL
    else tagList(div(class = "detail-label", name), ...)
  }
  
  detail <- div(
  class = "committee-detail",
  div(class = "detail-header", cmt$name,
    span(
      class = "detail-title", 
      paste("Chair:", cmt$chair) # Prepending "Chair:" to the chair value
    )
  ),
  div(class = "detail-description", cmt$description),
  cmt_field("Responsibilities", cmt$responsibilities),
  cmt_field("Relation to AP-LS Vision, Mission and Values", cmt$values),
  cmt_field("Additional", cmt$other),
  cmt_field("Contact", lapply(cmt$email, function(email) {
  if (grepl("@", email)) tags$a(href = paste0("mailto:", email), email)
  else if (identical(email, ",")) ", "
  else ""
}))
)

  
cmt$other <- Filter(Negate(is.null), cmt$other)

if (length(cmt$other) == 0) {
  detail <- div(
    class = "committee-detail",
  div(class = "detail-header", cmt$name,
      span(
      class = "detail-title", 
      paste0("Chair:", cmt$chair) # Prepending "Chair:" to the chair value
    )
  ),
  div(class = "detail-description", cmt$description),
  cmt_field("Responsibilities", cmt$responsibilities),
  cmt_field("Relation to AP-LS Vision, Mission and Values", cmt$values),
  #cmt_field("Additional", cmt$other),
  cmt_field("Contact", lapply(cmt$email, function(email) {
  if (grepl("@", email)) tags$a(href = paste0("mailto:", email), email)
  else if (identical(email, ",")) ", "
  else ""
}))
)
} else {
  detail <- div(class = "committee-detail",
  div(class = "detail-header", cmt$name
       # Prepending "Chair:" to the chair value
  ),
  div(class = "detail-description", cmt$description),
  cmt_field("Responsibilities", cmt$responsibilities),
  cmt_field("Relation to AP-LS Vision, Mission and Values", cmt$values),
  cmt_field("Contact", lapply(cmt$email, function(email) {
  if (grepl("@", email)) tags$a(href = paste0("mailto:", email), email)
  else if (identical(email, ",")) ", "
  else ""
}))
)
}

if (any(members$key == cmt$key)) {
  membership <- cmt_field(
    "Committee Members",
    reactable(
      members |> filter(key == cmt$key),
      pagination = FALSE,
      defaultColDef = colDef(headerClass = "header"),
      columns = list(
        Position = colDef(name = "Position"),
        Name = colDef(name = "Name"),
        Term = colDef(name = "Term"),
        key = colDef(show = FALSE),
        Additional = colDef(show = FALSE)
      ),
      class = "members-table",
      theme = reactableTheme(cellPadding = "8px 12px")
    )
  )
  detail <- tagAppendChild(detail, membership)
}

  
  detail
}


tbl <- reactable(
  cmts[, c("name", "chair")],
  defaultPageSize = 30,
  onClick = "expand",
  defaultColDef = colDef(headerClass = "header"),
  columns = list(
    name = colDef(name = "", minWidth = 250, class = "committee-title", cell = function(value) {
      span(title = value, value)
    }),
    chair = colDef(show=FALSE)
  ),
  details = row_details,
  wrap = TRUE,
  class = "committees-table",
  rowStyle = list(cursor = "pointer"),
  theme = reactableTheme(highlightColor = '#FBF9F4',
                         cellPadding = "8px 12px")
)
div(class = "committee-list",
  #h2(class = "title", "AP-LS Committees"),
  tbl
)
```

```{r echo=FALSE}
tags$link(href = "https://fonts.googleapis.com/css2?family=Proza+Libre:ital,wght@0,400;0,500;0,700;1,400&display=swap", rel = "stylesheet")
```

