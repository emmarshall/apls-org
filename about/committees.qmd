---
title: "Committees & Task Forces"
description: | 
  List of current committees and task forces for the American Psychology-Law Society.
title-block-banner: "../images/default-banner.svg"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```


The Society operates through a number of standing committees that work to carry out its mission and to accomplish particular tasks.

::: {.callout-note collapse="true"}
## Executive Committee

Occasionally, the President, in consultation with the Executive Committee, will also establish ad hoc committees and task forces. [Learn more about President and Executive Committee](leadership.html)
:::

```{r table, echo=FALSE, warning=FALSE, message=FALSE}
library(reactable)
library(htmltools)
library(readxl)
library(dplyr)
library(stringr)

# Read in committee bylaw information
cmts <- read.csv("committees.csv", stringsAsFactors = FALSE)
# Get sheet names from current leadership listing
sheet_names <- excel_sheets("Leadership 2022-23.xlsx")

excluded_names <- c("EC", "Conf_Chairs")
# Read in the Excel file and store it as a list of data frames with sheet names as column
excel_data <- lapply(sheet_names, function(sheet_name) {
  read_excel("Leadership 2022-23.xlsx", sheet = sheet_name) %>% 
    mutate(sheet_name = sheet_name)
})
# Combine the data frames into a single data frame
combined_data <- bind_rows(excel_data)
members <- combined_data |>
  filter(!sheet_name %in% excluded_names) |> 
  rename(key = sheet_name) |> 
  select(`key`, `Position`, `Name`, `Term`,`Additional`)

row_details <- function(index) {
  cmt <- cmts[index, ]
  urls <- unlist(strsplit(gsub(",", " , ", cmt$URL, perl = TRUE), "[ \n]"))
  
  cmt_field <- function(name, ...) {
    if (any(is.na(...))) NULL
    else tagList(div(class = "detail-label", name), ...)
  }
  
  detail <- div(
  class = "committee-detail",
  div(class = "detail-header", cmt$name, span(class = "detail-title", cmt$chair)),
  div(class = "detail-description", cmt$description),
  cmt_field("Responsibilities", cmt$responsibilities),
  cmt_field("Relation to AP-LS Vision, Mission and Values", cmt$values),
  cmt_field("URL", lapply(urls, function(url) {
    if (grepl("https?://", url)) tags$a(href = url, url)
    else if (identical(url, ",")) ", "
    else url
  })),
  cmt_field("Additional", cmt$other),
  cmt_field("Contact", lapply(cmt$email, function(email) {
  if (grepl("@", email)) tags$a(href = paste0("mailto:", email), email)
  else if (identical(email, ",")) ", "
  else ""
}))
)
  
if (any(members$key == cmt$key)) {
  membership <- cmt_field(
    "Committee Members",
    reactable(
      members %>% filter(key == cmt$key),
      pagination = FALSE,
      defaultColDef = colDef(headerClass = "header"),
      columns = list(
        Position = colDef(name = "Position"),
        Name = colDef(name = "Name"),
        Term = colDef(name = "Term"),
        key = colDef(show = FALSE),
        Additional = colDef(show = FALSE)
      ),
      class = "members-table",
      theme = reactableTheme(cellPadding = "8px 12px")
    )
  )
  detail <- tagAppendChild(detail, membership)
}

  
  detail
}


tbl <- reactable(
  cmts[, c("name", "chair")],
  defaultPageSize = 30,
  onClick = "expand",
  defaultColDef = colDef(headerClass = "header"),
  columns = list(
    name = colDef(name = "", minWidth = 250, class = "committee-title", cell = function(value) {
      span(title = value, value)
    }),
    chair = colDef(show=FALSE)
  ),
  details = row_details,
  wrap = TRUE,
  class = "committees-table",
  rowStyle = list(cursor = "pointer"),
  theme = reactableTheme(highlightColor = '#FBF9F4',
                         cellPadding = "8px 12px")
)
div(class = "committee-list",
  #h2(class = "title", "AP-LS Committees"),
  tbl
)
```

```{r echo=FALSE}
tags$link(href = "https://fonts.googleapis.com/css2?family=Proza+Libre:ital,wght@0,400;0,500;0,700;1,400&display=swap", rel = "stylesheet")
```

```{css echo=FALSE}
.committee-list {
  font-family: 'Proza Libre', sans-serif;
}
.title {
  font-size: 1.5rem;
}
.committees-table {
  margin-top: 1rem;
  font-size: 0.9375rem;
  border: 1px solid hsl(213, 33%, 93%);
  border-radius: 4px;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
}
.header {
  background-color: #1B3264;
  border-bottom-color: #1B3264;
  border-bottom-width: 1px;
  color: #FBF9F4;
}
.header[aria-sort]:hover,
.header[aria-sort]:focus {
  color: hsl(213, 55%, 50%);
}

.committee-title {
  font-size: 1.3rem;
  font-weight: 600;
  color: #1B3264;
}
.committee-detail {
  padding: 24px;
  box-shadow: inset 0 1px 3px #95a5a6;
  background: shift-color(#FBF9F4, -55%);
  'Proza Libre', sans-serif;
}
.detail-label {
  margin: 1.25rem 0 0.25rem;
  font-size: 0.95rem;
  color: #7b8a8b;
  text-transform: uppercase;
}
.detail-header {
  margin-bottom: 1rem;
  font-size: 1.35rem;
  font-weight: 600;
}
.detail-title {
  margin-left: 1rem;
  font-size: 0.875rem;
  font-weight: 400;
  color: #7b8a8b;
}
.detail-description {
  font-size: 0.875rem;
  'Proza Libre', sans-serif;
}
.members-table {
  max-width: 75rem;
  border: 1px solid hsl(213, 33%, 93%);
  border-radius: 4px;
  box-shadow: 0 2px 7px 0 rgba(0, 0, 0, 0.05);
  font-size: 0.875rem;
  'Proza Libre', sans-serif;
}
```
