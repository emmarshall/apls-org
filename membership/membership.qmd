---
title: "Membership"
description: |
  AP-LS membership is for the calendar year January 1 - December 31.
toc: false
section-divs: false
title-block-banner: "files/default-banner.svg"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
source("../_site/apls_functions.R")
```

# Why join AP-LS?

The American Psychology-Law Society (AP-LS) is an interdisciplinary organization devoted to scholarship, practice, and public service in psychology and law. AP-LS is both a free-standing organization as well as a division (Division 41) of the American Psychological Association (APA). Membership in AP-LS is therefore separate and independent from membership in Division 41 of APA, although many members belong to both organizations (AP-LS and APA).

##### Members of AP-LS enjoy a variety of benefits including:

```{r echo=FALSE, message=FALSE, warning=FALSE}
#| label: benefits table
#| classes: '.g-col-lg-6 .g-col-12 .g-col-md-12'

content = rowwise_table(~icon, ~text, ~link,
          "book",
            "Online access to the official journal of AP-LS, Law and Human Behavior.", 
              "https://www.apa.org/pubs/journals/lhb/",
          "newspaper",          
            "Online subscription to the AP-LS monthly newsletter.",   
              "newsletter/index.qmd",
          "award",          
            "Eligibility to apply for grants, fellowships, and awards.",                                 "funding/index.qmd",
          "credit-card",        
            "Discounts on AP-LS conference registration.",
              "conferences/index.qmd",
          "clipboard-data",      
            "Ability to vote in annual AP-LS elections.",              
              "about/leadership.html",
          "info-circle",        
            "Access to additional resources and networking opportunties.",                   
              "resources/index.qmd"
)
div(class = "feature-grid",
  pmap(content, function(icon, text, link) {
    div(class = "feature-grid__item",
        div(class="feature-grid__icon",
          a(href = link, class = "feature-grid__link",
            tags$i(class = sprintf("bi-%s feature-grid__i", icon))
         )
       ),
      text
    )
  })
)
```

# Who can join?

Membership is open to interested professionals and students in other disciplines beyond psychology. AP-LS encourages APA members, graduate and undergraduate students, and persons in related fields to consider joining.

## Membership Types

For a more detailed description of category of membership, see the [AP-LS Bylaws](about/bylaws.qmd).

##### There are six categories of membership in AP-LS including:

```{r}
#| echo: false
content = rowwise_table(~name, ~icon, ~url, ~text,
  "Full", "person-fill",      "",                                   "Individuals with a doctoral degree (Ph.D., Psy.D., M.D., or Ed.D.) in psych or related field or a Juris Doctorate.",
    "Associate", "person-fill",      "",                                   "Inviduals with a master's degree in psych or related field or a terminal bachelors degree.",
    "Early Career", "person-fill",      "",                                   "Individuals within 10 years of receiving latest degree.",
    "Fellows", "award",      "",                                   "Individuals granted Fellow Status (Full Members) or Distinguished Member status (Full Afilliates) by the society.",
    "International", "globe", "", "Individuals who reside outside the United States with a relevant doctoral degree. All join as International Affiliates.",
  "Student",           "mortarboard-fill",  "", 
  "Individuals currently enrolled in undergraduate or graduate program. All join as Student Affiliates."
)
div(class = "grid grid-three",
  pmap(content, function(name, icon, url, text, objective) {
      div(class = "grid__item",
        h3(class = "grid__title",
          tags$i(class = sprintf("bi-%s grid__title-icon", icon)),
          span(class = "grid__title-name", name)
        ),
        p(class = "grid__text", text),
        a(href = url, span(class = "grid__link-box"))
      )
  })
)
```


Did you receive your renewal notice from the AP-LS Office?
Please complete the renewal form below and continue receiving member benefits with AP-LS.

```{r echo=FALSE, warning=FALSE, message=FALSE}
#| label: price table

levels <- c('Full', 'ECP', 'Student')
prices <- c(50, 15, 15)
names(prices) <- levels
intros <- c('Individuals with degree in psych or related field including', 'Individuals within 10 years of receieving', 'Individuals currently enrolled as either')
features <- c('Doctoral Degree (Ph.D., Psy.D., M.D., or Ed.D.)', 'Juris Doctorate', 'Masters Degree', 'Terminal Bachelors Degree', 'Undergraduate Student', 'Graduate Student')
df <- tibble(
  level = levels,
  yearly_price = prices[levels],
  intro = intros,
  features = list(features[1:4], features[1:4], features[5:6]),
  join_link = 'https://apls.memberclicks.net/membership-form'
) |>
  unnest(features) |> 
  select(level, features)
level_colors <- c(
  Full = "#1B3264",
  ECP = "#1B3264",
  Student =  "#1B3264"
)

tier_feature_table <- function(level) {
  level_data <- df %>%
    ## We use !! here so that this filter actually filters
    filter(level == !!level) %>%
    mutate(in_level = TRUE)  %>%
    complete(
      expand(df, features),
      fill = list(in_level = FALSE)
    ) %>%
    filter(in_level == TRUE) %>%
    select(in_level, features) %>% 
    arrange(features = fct_relevel(features, !!features)) %>% 
    mutate(
      in_level = ifelse(
        in_level,
        fontawesome::fa('circle-check', fill = level_colors[level]) %>% html(),
        ""
      )
    )
  
  level_data |> 
    gt() |>
    fmt_markdown(columns = 'in_level') |>
    cols_width(in_level ~ px(25), everything() ~ px(175)) |>
    tab_options(
      column_labels.hidden = TRUE,
      table.font.names = 'Source Sans Pro',
      table_body.border.top.style = 'none',
      table.border.top.style = 'none',
      table_body.border.bottom.style = 'none',
      table.border.bottom.style = 'none',
      table_body.hlines.style = 'none',
    ) 
}
tables_tib <- tibble(
  level = levels,
  table = map_chr(levels, ~as_raw_html(tier_feature_table(.)))
) |>
  pivot_wider(names_from = level, values_from = table)
intro_tib <- tibble(
  level = levels,
  intro = paste0('<br>', intros, ':</br>')
) |> 
  pivot_wider(names_from = level, values_from = intro)
price_tib <- tibble(
  level = levels,
  price = paste0('$<span style="font-size:40px;">', prices, '</span>/year')
) |>
  pivot_wider(names_from = level, values_from = price)
style_url <- function(link, color) {
  htmltools::a(
      href = link,
      "Join now",
      style = glue::glue("border-radius: 5px;color: white;background-color: {color};border-radius: 5px;padding: 8px 20px;display: inline-block;text-decoration:none")
  )
}
url_tib <- tibble(
  level = levels,
  level_colors = level_colors[level],
  join_link = 'https://apls.memberclicks.net/membership-form'
) |>
  mutate(
    join_link = map2(join_link, level_colors, style_url),
    join_link = map_chr(join_link, ~as.character(.x))
  ) |>
  select(-level_colors) |>
  pivot_wider(names_from = level, values_from = join_link)
levels_text_size <- px(30)
unstyled_pricing_table <- bind_rows(price_tib, intro_tib, tables_tib, url_tib) |>
  mutate(dummy1 = '', .after = 1) |>
  mutate(dummy2 = '', .after = 3) |>
  gt(id = 'pricing-table') |>
  fmt_markdown(columns = everything()) |>
  cols_align(align = 'center') |>
  cols_label(
    dummy1 = '',
    dummy2 = '',
    ECP = "Early Career",
    Full = "Full or Associate",
    Student = "Student"
  ) |>
  cols_width(
    dummy1 ~ px(15),
    dummy2 ~ px(15),
    Full ~ px(250),
    ECP ~ px(250),
    Student ~ px(250)
  )  |>
  tab_header(
    title = 'Membership Pricing'
  ) 
unstyled_pricing_table |>
  tab_style(
    style = list(
      cell_fill(color = level_colors['Full']),
      cell_text(color = 'white', weight = 'bold')
    ),
    locations = list(
      cells_body(columns = 'Full', rows = 1),
      cells_column_labels(column = 'Full')
    )
  ) |>
  tab_style(
    style = list(
      cell_fill(color = level_colors['ECP']),
      cell_text(color = 'white', weight = 'bold')
    ),
    locations = list(
      cells_body(columns = 'ECP', rows = 1), cells_column_labels(column = 'ECP')
    )
  ) |>
  tab_style(
    style = list(
      cell_fill(color = level_colors['Student']),
      cell_text(color = 'white', weight = 'bold')
    ),
    locations = list(
      cells_body(columns = 'Student', rows = 1),
      cells_column_labels(column = 'Student')
    )
  ) |>
  tab_style(
    style = cell_text(size = levels_text_size),
    locations = cells_column_labels()
  ) |>
  tab_style(
    style = list(cell_fill(color = 'white')),
    locations = list(
      cells_body(columns = contains('dummy')),
      cells_column_labels(columns = contains('dummy'))
    )
  ) |>
  tab_style(
    style = cell_borders(sides = 'bottom', color = '#D3D3D3'),
    locations = cells_body(rows = 4, columns = c(1, 3, 5))
  ) |>
  tab_options(
    table_body.border.top.style = 'none',
    table.border.top.style = 'none',
    table_body.border.bottom.style = 'none',
    table.border.bottom.style = 'none',
    table_body.hlines.style = 'none',
    table_body.vlines.style = 'solid',
    column_labels.border.top.style = 'none',
    column_labels.border.bottom.style = 'none',
    column_labels.border.lr.style = 'solid', # not working, set in css
    column_labels.border.lr.width = px(1),
    column_labels.padding = px(1),
    data_row.padding = px(2),
    table.font.names = 'Source Sans Pro',
    heading.title.font.size = px(45),
    heading.padding = px(10),
    heading.border.bottom.style = 'none'
  ) |>
  opt_css(
    '#pricing-table .gt_footnote {
      text-align: right; padding-top: 5px;
    }
    #pricing-table .gt_col_heading {
      border-left-style:solid;
      border-right-style:solid;
    }
    
    #pricing-table thead, tbody, tfoot, tr, td, th {
      border-color: inherit;
      border-style: solid;
      border-width: 0;
    }
    
    #pricing-table a {
    &:hover {
        transform: translateY(-3px);
        box-shadow: 0 5px 5px rgba(0, 0, 0, 0.4);
      }
      &:active {
        box-shadow: inset 0 -3px 5px rgba(0, 0, 0, 0.4);
      }
    }
    '
  )
```

::: callout-note
## Need help?

Contact the [AP-LS office](mailto:office@apls.org) with any questions.
:::
