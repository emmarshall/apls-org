---
pagetitle: "Program & Schedule"
---

::: simple-info
::: {.content-block .col-v-center}
## Conference Program & Schedule 
:::
:::
::: grid
::: {.g-col-12 .g-col-md-6 .col-v-center}
![](images/ap-ls-cover-2023){fig-align="center" width="250"}
:::

::: {.g-col-12 .g-col-md-6 .col-v-center}
> #### Get the Guide on your mobile device.
>
> tap "Download the app" to access the guide on your iOS or Android device.

> Prefer the web version? Some content and networking tools may be available to you online.

<div class="d-flex flex-wrap justify-content-start align-items-center">
  [{{< fa mobile-screen >}} guidebook](https://guidebook.com/g/#/guides/apls2023/details){.btn .btn-outline-primary role="button"}
  {{< downloadthis files/2023_APLS_program_grid_final.pdf dname:"program-grid" label="Program Grid" icon=file-pdf type=outline-primary >}}
</div>

:::
:::

:::vspace
:::
```{r}
#| echo: false
#| warning: false
#| message: false

library(readxl)
library(stringr)
library(htmltools)
library(crosstalk)
library(dplyr)
library(tidyr)
library(reactablefmtr)
library(tippy)
library(htmlwidgets)

grid <- read_excel("AP-LS_2023_Program.xlsx", sheet = "schedule")

# Make day an ordered factor to use as filter 
grid$day <- factor(grid$day, levels = c("Thursday", "Friday", "Saturday"))


grid <- grid |> 
  mutate(time = paste(format(start, "%I:%M %p"), " - ", format(end, "%I:%M %p"))) |> 
  mutate(type = str_to_title(type)) |> 
  mutate(
    img = case_when(
      type == "Networking" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Networking.png",
      type == "Session" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Session.png",
      type == "Poster" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Poster.png",
      type == "Coffee" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Coffee.png",
      type == "Committee" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Committee.png",
      type == "Plenary" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Plenary.png",
      type == "Featured" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Plenary.png",
      type == "Award" ~
        "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/tbl/Award.png"
    )
  ) 


# See the ?tippy documentation to learn how to customize tooltips
with_tooltip <- function(value, tooltip, ...) {
  div(style = "cursor: help",
      tippy(value, tooltip, ...))
}


row_details <- function(index) {
  dets <- grid[index, ]
  
  dets_field <- function(name, ...) {
    if (any(is.na(...))) NULL
    else tagList(div(class = "detail-label", name), ...)
  }
  
  speakers <- lapply(paste0("people_", 1:5), function(who_col) {
    if (is.na(dets[[who_col]])) {
      NULL
    } else {
      div(dets[[who_col]])
    }
  })
  

speakers <- Filter(Negate(is.null), speakers)

if (length(speakers) == 0) {
  detail <- div(
    class = "schedule-detail",
    dets_field("Event Type", dets$type),
    dets_field("CE Credits", dets$CE)
  )
} else {
  detail <- div(
    class = "schedule-detail",
    dets_field("Event Type", dets$type),
    dets_field("CE Credits", dets$CE),
    dets_field("Speakers", div(class = "people", speakers))
  )
}

  detail
}

# create the shared data object
sd <- SharedData$new(grid |>
                       select(day, month, number, img, title, start, end, time, location, type, CE, details, contains("people_")))

tbl_grid <- reactable(sd, 
              defaultSorted = c("number", "start"),
              searchable = TRUE,
              onClick = "expand",
              defaultPageSize = 30,
              defaultColDef = colDef(
                  vAlign = "center",
                  headerVAlign = "bottom",
                  headerClass = "header"
              ),
              columns = list(
                number = colDef(
                  name = "Date",
                  minWidth = 125, 
                  cell = merge_column(grid, 
                            merged_name = "month",
                            merged_size = 20,
                            merged_color = "#252525",
                            merged_position = "below",
                            size = 50,
                            color = "#1B3264")
                  ),
                img = colDef(
                  minWidth = 90,
                  name = "",
                  cell = embed_img(grid, height = 70, width = 70)
                             ),
                title = colDef(
                  header = with_tooltip("Session", "Event title & details"),
                  minWidth = 400,
                  align = "left", 
                  cell = function(value, index) { 
                    subtitle <- grid$details[index]
        subtitle <- if (!is.na(subtitle)) subtitle else ""
        div(
          div(style = "font-weight: 600", value),
          div(style = "font-size: 1.1rem; color: #343a40", subtitle)
        )
      }
    ),
                location = colDef(
                   header = with_tooltip("Details", "Session Details about Location & Time"),
                  minWidth = 200,
                  cell = merge_column(grid, 
                            merged_name = "time",
                            merged_size = 18,
                            merged_color = "#343a40",
                            merged_position = "above",
                            size = 16,
                            color = "#1B3264")
                  ),
                day = colDef(show = FALSE),
                time = colDef(show = FALSE),
                month = colDef(show = FALSE),
                number = colDef(show = FALSE),
                start = colDef(show = FALSE),
                end = colDef(show = FALSE),
                CE = colDef(show = FALSE),
                type = colDef(show = FALSE),
                details = colDef(show = FALSE),
                people = colDef(show = FALSE),
                people_1 = colDef(show = FALSE),
                people_2 = colDef(show = FALSE),
                people_3 = colDef(show = FALSE),
                people_4 = colDef(show = FALSE),
                people_5 = colDef(show = FALSE),
                people_6 = colDef(show = FALSE),
                people_7 = colDef(show = FALSE),
                people_8 = colDef(show = FALSE),
                people_9 = colDef(show = FALSE),
                people_10 = colDef(show = FALSE),
                people_11 = colDef(show = FALSE)
                ),
    details = row_details,
    wrap = TRUE,
    class = "schedule-table",
    rowStyle = list(cursor = "pointer"),
    theme = reactableTheme(
      highlightColor = "#95a5a6"
  )
)

# Create the filter group with bscols for each filter element
my_filter_group <- function(...) {
  filter_group(
    lapply(list(...), function(filter) {
      bscols(
        width = c(3, 4, 4),
        filter
      )
    }))
}



#add title, subtitle, footnote and source
tbl <- tbl_grid |> 
  #title & subtitle
  htmlwidgets::prependContent(
    tagList(
      tags$img(src = "https://github.com/emmarshall/emmarshall.github.io/raw/main/images/logo-blue.png", style = "width:50px;height:50px;display:inline-block;vertical-align:middle;"),
      tags$div("2023 AP-LS Program Grid", style="font-size:32px;font-weight:bold;margin-left:5px;margin-bottom:0;display:inline-block;vertical-align:middle;"), 
      tags$h3("Schedule at a glance", style="margin-bottom:20px;margin-top:0;font-weight:400;color:#8C8C8C;padding-left:40px;")
  )
  ) |> 
  #footnote and source
  htmlwidgets::appendContent(
    tags$div(style="text-align:center;color:black;font-size:14pt;border-bottom-style:solid;border-top-style:solid;width:910px;padding-bottom:20px;padding-top:20px;border-color:#DADADA;",
  tags$a(href = "https://github.com/emmarshall/emmarshall.github.io/raw/main/events/2023_APLS_program_grid_final.pdf", download = "2023_APLS_program_grid_final.pdf", class = "btn-action-primary btn-action btn btn-primary", role="button", "Download Schedule")
),
    tags$div(
      tags$div("Last Updated: March 15, 2023", style="display:inline-block;vertical-align:middle;")
  )
)


```

```{css echo=FALSE, warning=FALSE, message=FALSE}

.schedule-tbl {
  margin-top: 1rem;
  font-size: 1.2rem;
  border: 1px solid hsl(213, 33%, 93%);
  border-radius: 4px;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.1);
}

.header {
  border-bottom-color: #FBF9F4;
  color: #FBF9F4;
  background: #1B3264;
  font-weight: 500;
  text-align: left;
  font-size: 1.5rem;
  letter-spacing: 0.1rem;
  font-variant: small-caps;
  padding: 5px;
  border: 0;
}

.filter-wrapper {
  text-align: center;
  width: 60%;
  margin-left: 20px;
  margin-right: 20px;
}
/* On hover, the text appears yellow */
.header:hover[aria-sort] {
  color: yellow;
}

/* When selected, the text is white */
.header[aria-sort='ascending'],
.header[aria-sort='descending'] {
  color: white;
}

.title {
  font-size: 1.5rem;
}

.location {
  text-align: center;
  font-size: 0.875rem;
  font-weight: 400;
  color: #252525;
}

.number {
    color = #1B3264,
    font-size: .075rem;
    font-weight: 600;
    line-height: 20px;
    -webkit-transition: all 0.4s;
    -o-transition: all 0.4s;
    transition: all 0.4s;
}


.schedule-detail {
  padding: 24px;
  box-shadow: inset 0 1px 3px #95a5a6;
  background: shift-color(#FBF9F4, -55%);
  'Proza Libre', sans-serif;
}
.detail-label {
  margin: 1.25rem 0 0.25rem;
  font-size: 0.95rem;
  color: #95a5a6;
  text-transform: uppercase;
}
.detail-header {
  margin-bottom: 1rem;
  font-size: 1.35rem;
  font-weight: 600;
}
.detail-title {
  margin-left: 1rem;
  font-size: 0.875rem;
  font-weight: 400;
  color: #252525;
}

.objectives {
  font-size: .0875;
  color: #252525;
  line-height: 1.5;
  margin-left: 10px;
  margin-bottom: 10px;
}


@media only screen and (max-width: 600px) {
  .screen-inset .my-reactable-table {
    font-size: 14px;
    width: 100%;
  }
  
  .screen-inset .crosstalk-filtered-select {
    width: 100%;
  }
  
  .screen-inset .crosstalk-filtered-checkbox {
    display: block;
    margin-bottom: 10px;
  }
}




```

```{r}
#| echo: false
#| warning: false
#| message: false
#| column: screen-inset

bscols(
  # bootstrap is built off a 12 wide grid system,
  # so we have 1/6 and 5/6 width below
  widths = c(12, 12),
  list(
    tags$div(
      filter_checkbox("day", "DAY", sd, ~factor(day)),
      filter_checkbox("CE", "CE CREDITS", sd, ~CE),
      style = "font-size:20px;"
    ),
    filter_select("type", "EVENT TYPE", sd, ~type),
    tags$div(
      class = "table-responsive",
      tags$table(
        class = "my-reactable-table",
        tbl
      )
    ),
    style = "display: flex; flex-wrap: wrap;"
  )
)
```